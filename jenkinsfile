pipeline {
    environment {
        IMAGE_NAME = "alpinehelloword"
        IMAGE_TAG = "latest"
        STAGING = "eazytraining-staging"
        PRODUCTION = "eazytraining-production"
    }

    agent none

    stages {
        stage('Build Image') {
            agent any
            steps {
                script {
                    bat 'docker build -t kayden/%IMAGE_NAME%:%IMAGE_TAG% .'
                }
            }
        }

        stage('Run Container based on builder image') {
            agent any
            steps {
                script {
                    bat '''
                        docker run --name %IMAGE_NAME% -d -p 80:5000 -e PORT= kayden/%IMAGE_NAME%:%IMAGE_TAG%
                        timeout /T 5 /NOBREAK
                    '''
                }
            }
        }

        stage('Test image') {
            agent any
            steps {
                script {
                    bat '''
                        curl http://localhost | findstr "hello word"
                    '''
                }
            }
        }

        stage('Remove Image') {
            agent any
            steps {
                script {
                    bat '''
                        docker stop %IMAGE_NAME%
                        docker rm %IMAGE_NAME%
                    '''
                }
            }
        }

        stage('Push image in staging and deploy it') {
            when {
                expression { GIT_BRANCH == 'origin/master' }
            }
            agent any
            environment {
                HEROKU_API_KEY = credentials('heroku_api_key')
            }
            steps {
                bat '''
                    heroku container:login
                    heroku create %STAGING% || echo "project already exist"
                    heroku container:push -a %STAGING% web
                    heroku container:release -a %STAGING% web
                '''
            }
        }

        stage('Push image in production and deploy it') {
            when {
                expression { GIT_BRANCH == 'origin/master' }
            }
            agent any
            environment {
                HEROKU_API_KEY = credentials('heroku_api_key')
            }
            steps {
                bat '''
                    heroku container:login
                    heroku create %PRODUCTION% || echo "project already exist"
                    heroku container:push -a %PRODUCTION% web
                    heroku container:release -a %PRODUCTION% web
                '''
            }
        }
    }
}
